// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
// TODO Prisma
datasource db {
   provider = "postgresql"
   url      = env("DATABASE_URL")
}

generator client {
   provider = "prisma-client-js"
}

model Account {
   id                 String  @id @default(cuid())
   userId             Int
   type               String
   provider           String
   providerAccountId  String
   refresh_token      String?  @db.Text
   access_token       String?  @db.Text
   expires_at         Int?
   token_type         String?
   scope              String?
   id_token           String?  @db.Text
   session_state      String?
   user users @relation(fields: [userId], references: [id], onDelete: Cascade)

   @@unique([provider, providerAccountId])
}

model Session {
   id           String   @id @default(cuid())
   sessionToken String   @unique
   userId       Int
   expires      DateTime
   user         users     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model division {
   id         Int        @id @default(autoincrement())
   name       String?    @unique(map: "division_u_ind") @db.VarChar(200)
   short_name String?    @db.VarChar(50)
   contacts   String?    @db.VarChar(300)
   parent_id  Int?
   parent     division?  @relation("divisionTodivision", fields: [parent_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
   childrens  division[] @relation("divisionTodivision")
   users      users[]
}

model users {
   id            Int         @id @default(autoincrement())
   email         String      @unique(map: "users_email_u_ind") @db.VarChar(50)
   name          String?     @db.VarChar(100)
   contacts      String?     @db.VarChar(50)
   begin_date    DateTime    @db.Timestamp(6)
   end_date      DateTime?   @db.Timestamp(6)
   password      String?     @db.VarChar(255)
   division_id   Int
   roles         Json?       @db.Json
   division      division    @relation(fields: [division_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
   attachment_id Int?
   avatar        attachment? @relation(fields: [attachment_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
   emailVerified DateTime?
   accounts      Account[]
   sessions      Session[]
}

model attachment {
   id       Int     @id @default(autoincrement())
   filename String  @db.VarChar(100)
   name     String? @db.VarChar(100)
   md5      String  @db.VarChar(16)
   body     Bytes   @db.ByteA
   users    users[]
}
